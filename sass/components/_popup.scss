.popup {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba($color-black, .8);
    z-index: 9999;
    opacity: 0;
    visibility: hidden;  // hiding the pop up
    transition: all .3s;

    @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
        background-color: rgba($color-black, .3);
    }

    &__content {
        @include absCenter;

        width: 75%;
        // height: 50rem;  // It was used for error and try purposes
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;
        display: table;
        overflow: hidden; // so that part of the image which is overflowing this box will not be visible anymore
        opacity: 0;
        // We can not use transform in this case, because we already have one. You can only have one transform or one property in each declaration block.
        // But we can put them in the same , so basically we are repeating the one we have coming from mixin, but thats the only way to do it
        transform: translate(-50%, -50%) scale(.25) ;
        transition: all .4s .2s;  // delayed by .2s
    }

    &__left {
        width: 33.333333%;
        display: table-cell;
    }

    &__right {
        width: 66.666666%;
        display: table-cell;
        vertical-align: middle;
        padding: 3rem 5rem;
    }

    &__img {
        display: block;
        width: 100%;
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        -moz-column-gap: 4rem;  // if we use 1em, means it equal to 1.4rem
        -moz-column-rule: 1px solid $color-grey-light-2;

        column-count: 2;
        column-gap: 4rem;  // if we use 1em, means it equal to 1.4rem
        column-rule: 1px solid $color-grey-light-2;

        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;
    }

    // Open states 
    &:target {
        opacity: 1; // calling the pop up back
        visibility: visible;
    }

    // Make the popup feels like moving towards the user, change little bit the &__content
    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1) ;
    }
    &__close {
        &:link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;  // So it will be positioned to its first positioned parent
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
            line-height: 1;
        }

        &:hover {
            color: $color-primary;
        }
    }

}